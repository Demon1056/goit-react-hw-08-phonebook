{"version":3,"file":"static/js/250.fece9920.chunk.js","mappings":"qQAEaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6LAUVE,GAAcF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,gDAGXI,GAAqBJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,8H,6FCHzBM,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAEHG,QALa,2DAKM,wCACnBC,SAAS,uCACZC,MAAOL,EAAAA,KAEJI,SAAS,wCACTC,MAAM,iEACTC,SAAUN,EAAAA,KAEPO,OAAO,EAAG,wDACVH,SAAS,6CAoCd,UAjCiB,WACf,IAAMI,GAAWC,EAAAA,EAAAA,MAKjB,OACE,SAAC,KAAD,CACEC,cAAe,CAAER,KAAM,GAAIG,MAAO,GAAIC,SAAU,IAChDK,SAAU,SAACC,EAAGC,GAAJ,OAPU,SAACC,EAAQD,GAC/BL,GAASO,EAAAA,EAAAA,IAASD,IAClBD,EAAQG,WACT,CAI6BC,CAAgBL,EAAGC,EAAnC,EACVK,iBAAkBnB,EAHpB,UAKE,UAAC,KAAD,YACE,qCAEE,SAAC,KAAD,CAAaoB,KAAK,OAAOjB,KAAK,YACvB,KACT,SAAC,KAAD,CAAoBA,KAAK,OAAOkB,UAAU,UAC1C,sCAEE,SAAC,KAAD,CAAaD,KAAK,QAAQjB,KAAK,cAEjC,SAAC,KAAD,CAAoBA,KAAK,QAAQkB,UAAU,UAC3C,yCAEE,SAAC,KAAD,CAAaD,KAAK,WAAWjB,KAAK,iBAEpC,SAAC,KAAD,CAAoBA,KAAK,WAAWkB,UAAU,UAC9C,mBAAQD,KAAK,SAAb,0BAIP,C","sources":["components/Form/ProjectForm.styled.js","pages/Register/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\nexport const FormStyles = styled(Form)`\n  margin: 0 auto;\n  padding: 20px;\n  width: 250px;\n  height: auto;\n  border-radius: 5%;\n  text-align: center;\n  border: 4px solid aqua;\n  border-radius: 5%;\n`;\nexport const FieldStyles = styled(Field)`\n  margin-bottom: 10px;\n`;\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  display: block;\n  color: red;\n  font-size: 10px;\n  text-align: center;\n  border: 1px solid red;\n`;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport {\n  FormStyles,\n  FieldStyles,\n  ErrorMessageStyled,\n} from 'components/Form/ProjectForm.styled';\n\nconst textValid = /^([A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00f6\\u00f8-\\u00ff\\s]*)$/gi;\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(textValid, 'Name can only contain Latin letters.')\n    .required('Sorry, but Name is a required field'),\n  email: yup\n    .string()\n    .required('Sorry, but Email is a required field')\n    .email('Please write your real email (Example: MAILBOX@SUBDOMAIN.COM)'),\n  password: yup\n    .string()\n    .length(8, ' Sorry, but the password should consist of 8 symbols')\n    .required('Sorry, but Password is a required field'),\n});\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const registerRequest = (values, actions) => {\n    dispatch(register(values));\n    actions.resetForm();\n  };\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      onSubmit={(e, actions) => registerRequest(e, actions)}\n      validationSchema={schema}\n    >\n      <FormStyles>\n        <label>\n          Name\n          <FieldStyles type=\"text\" name=\"name\" />\n        </label>{' '}\n        <ErrorMessageStyled name=\"name\" component=\"span\" />\n        <label>\n          Email\n          <FieldStyles type=\"email\" name=\"email\" />\n        </label>\n        <ErrorMessageStyled name=\"email\" component=\"span\" />\n        <label>\n          Password\n          <FieldStyles type=\"password\" name=\"password\" />\n        </label>\n        <ErrorMessageStyled name=\"password\" component=\"span\" />\n        <button type=\"submit\">Register</button>\n      </FormStyles>\n    </Formik>\n  );\n};\nexport default Register;\n"],"names":["FormStyles","styled","Form","FieldStyles","Field","ErrorMessageStyled","ErrorMessage","schema","yup","shape","name","matches","required","email","password","length","dispatch","useDispatch","initialValues","onSubmit","e","actions","values","register","resetForm","registerRequest","validationSchema","type","component"],"sourceRoot":""}