{"version":3,"file":"static/js/675.7be82320.chunk.js","mappings":"qQAEaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6LAUVE,GAAcF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,gDAGXI,GAAqBJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,8H,6FCLzBM,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAEJG,SAAS,wCACTD,MAAM,iEACTE,SAAUJ,EAAAA,KAEPK,OAAO,EAAG,wDACVF,SAAS,6CA+Bd,UA5Bc,WACZ,IAAMG,GAAWC,EAAAA,EAAAA,MAKjB,OACE,SAAC,KAAD,CACEC,cAAe,CAAEN,MAAO,GAAIE,SAAU,IACtCK,SAAU,SAACC,EAAGC,GAAJ,OAPO,SAACC,EAAQD,GAC5BL,GAASO,EAAAA,EAAAA,IAAMD,IACfD,EAAQG,WACT,CAI6BC,CAAaL,EAAGC,EAAhC,EACVK,iBAAkBjB,EAHpB,UAKE,UAAC,KAAD,YACE,sCAEE,SAAC,KAAD,CAAakB,KAAK,QAAQC,KAAK,cAEjC,SAAC,KAAD,CAAoBA,KAAK,QAAQC,UAAU,UAC3C,yCAEE,SAAC,KAAD,CAAaF,KAAK,WAAWC,KAAK,iBAEpC,SAAC,KAAD,CAAoBA,KAAK,WAAWC,UAAU,UAC9C,mBAAQF,KAAK,SAAb,uBAIP,C","sources":["components/Form/ProjectForm.styled.js","pages/Login/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\nexport const FormStyles = styled(Form)`\n  margin: 0 auto;\n  padding: 20px;\n  width: 250px;\n  height: auto;\n  border-radius: 5%;\n  text-align: center;\n  border: 4px solid aqua;\n  border-radius: 5%;\n`;\nexport const FieldStyles = styled(Field)`\n  margin-bottom: 10px;\n`;\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  display: block;\n  color: red;\n  font-size: 10px;\n  text-align: center;\n  border: 1px solid red;\n`;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport {\n  FormStyles,\n  FieldStyles,\n  ErrorMessageStyled,\n} from 'components/Form/ProjectForm.styled';\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .required('Sorry, but Email is a required field')\n    .email('Please write your real email (Example: MAILBOX@SUBDOMAIN.COM)'),\n  password: yup\n    .string()\n    .length(8, ' Sorry, but the password should consist of 8 symbols')\n    .required('Sorry, but Password is a required field'),\n});\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const loginRequest = (values, actions) => {\n    dispatch(logIn(values));\n    actions.resetForm();\n  };\n  return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      onSubmit={(e, actions) => loginRequest(e, actions)}\n      validationSchema={schema}\n    >\n      <FormStyles>\n        <label>\n          Email\n          <FieldStyles type=\"email\" name=\"email\" />\n        </label>\n        <ErrorMessageStyled name=\"email\" component=\"span\" />\n        <label>\n          Password\n          <FieldStyles type=\"password\" name=\"password\" />\n        </label>\n        <ErrorMessageStyled name=\"password\" component=\"span\" />\n        <button type=\"submit\">Login</button>\n      </FormStyles>\n    </Formik>\n  );\n};\nexport default Login;\n"],"names":["FormStyles","styled","Form","FieldStyles","Field","ErrorMessageStyled","ErrorMessage","schema","yup","shape","email","required","password","length","dispatch","useDispatch","initialValues","onSubmit","e","actions","values","logIn","resetForm","loginRequest","validationSchema","type","name","component"],"sourceRoot":""}